on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - run: echo "$($pwd.path)\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install and cache PowerShell modules
        uses: potatoqualitee/psmodulecache@v4
        with:
          modules-to-cache: powershell-yaml

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          cache: 'pip'
      - run: pip install -r requirements.txt

      - name: build
        env:
          PFX_PASSPHRASE: ${{ secrets.PFX_PASSPHRASE }}
          PFX_THUMBPRINT: ${{ secrets.PFX_THUMBPRINT }}
        run: ./build.ps1 -NoGit
      
      - uses: actions/upload-artifact@v2
        with:
          name: catalog
          path: |
            ./manifests/**/*.yaml
            ./source.msix
            ./version.txt

  test:
    needs: build
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: catalog

      - name: Install winget
        uses: Cyberboss/install-winget@v1
        with:
          GITHUB_TOKEN: ${{ github.token }}
      
      - name: validate
        run: ./validate.ps1

  build-release:
    needs: test
    runs-on: windows-latest

    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - run: echo "$($pwd.path)\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install and cache PowerShell modules
        uses: potatoqualitee/psmodulecache@v4
        with:
          modules-to-cache: powershell-yaml

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          cache: 'pip'
      - run: pip install -r requirements.txt

      - name: install AzureSignTool
        run: dotnet tool install --global AzureSignTool --version 3.0.0

      - name: build and sign
        env:
          AZURE_SIGN_CLIENT_SECRET: ${{ secrets.AZURE_SIGN_CLIENT_SECRET }}
        run: ./build.ps1 -NoGit -Release

      - uses: actions/upload-artifact@v2
        with:
          name: catalog-release
          path: |
            ./manifests/**/*.yaml
            ./source.msix
            ./version.txt

  release:
    needs: build-release
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2
        with:
          ref: "gh-pages"
          fetch-depth: 0

      - name: Set git config
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - uses: actions/download-artifact@v2
        with:
          name: catalog-release

      - name: Commit changes
        run: |
          git add source.msix
          git add manifests/
          git commit -m "new index published"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: "gh-pages"
